function outpairs=pair_filter(inpairs,chan_locs,type,arg)

n_pairs=size(inpairs,1);

switch type
    case 'x_edges'
        
        exclude_channels=[1 2 3 4 14 15 26 27 30 31 32 33 36 37 38 46 45 54 55 58];
        exclude_pairs=any(ismember(inpairs,exclude_channels),2);
        outpairs=inpairs(~exclude_pairs,:);
        
    case 'distance'
        
        if ~isnumeric(arg) || length(arg)~=2
            error('For distance filter, arg must be [lower upper] in cm')
            return
        end
        
        dist=zeros(n_pairs,1);
        for p=1:n_pairs
            x_dist = chan_locs(inpairs(p,1)).X - chan_locs(inpairs(p,2)).X;
            y_dist = chan_locs(inpairs(p,1)).Y - chan_locs(inpairs(p,2)).Y;
            z_dist = chan_locs(inpairs(p,1)).Z - chan_locs(inpairs(p,2)).Z;
            dist(p) = sqrt( x_dist^2 + y_dist^2 + z_dist^2 );
        end
        
        arg = arg / 10;
        
        distance_inds = dist > arg(1) & dist < arg(2);
        
        outpairs=inpairs(distance_inds,:);
        
    case 'orientation'
        
        %determine the angle of the chosen pairs
        pair_angle=zeros(n_chosen_pairs,1);
        for p=1:n_pairs
            %define [x1 x2], [y1 y2]
            x=[chan_locs(inpairs(p,1)).topo_x chan_locs(inpairs(p,2)).topo_x];
            y=[chan_locs(inpairs(p,1)).topo_y chan_locs(inpairs(p,2)).topo_y];
            pair_angle(p)=atan((y(2)-y(1))/(x(2)-x(1)));
        end
        
        oriented_inds = pair_angle < -1.26 | ( pair_angle > -0.314 & pair_angle < 0.314 ) | pair_angle > 1.26 ;
        ap_inds = pair_angle < -1.26 | pair_angle > 1.26 ;
        lr_inds = pair_angle > -0.314 & pair_angle < 0.314;
        %take the subset of non-nearly a-p or l-r oriented pairs
        non_oriented_inds = ~oriented_inds;
        switch orientation_spec
            case 'all' %do nothing, take all pairs regardless of orientation
            case 'ap'
                inpairs = inpairs(ap_inds,:);
            case 'lr'
                inpairs = inpairs(lr_inds,:);
            case 'aplr' %take the a-p or l-r oriented pairs
                inpairs = inpairs(oriented_inds,:);
            case 'diag' %take the diagonally-oriented pairs
                inpairs = inpairs(non_oriented_inds,:);
        end
        
    case 'max_degree'
        
        
        
end
    
    
    
end