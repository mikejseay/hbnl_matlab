function [outpairs, outinds] = coh_pairgui_filter(inpairs, ininds, chan_locs)

geometry = { [3.33 1.66 1 1.5] [2 1 1.5] [2 1 1.5] [2 1 1.5] [2 1 1.5] ...
            };

uilist = {  { 'Style', 'text', 'string', 'Include outer electrodes?' }, ...
            { 'Style', 'checkbox', 'Value', 1, 'string', '', 'horizontalalignment', 'right'}, ...
            {}, ...
            {}, ...
            ...
            { 'Style', 'text', 'string', 'Distance range between electrodes [lower upper] (in cm)', 'horizontalalignment' , 'right' }, ...
            { 'Style', 'edit', 'string', '[0 20]' } ...
            { 'Style', 'text', 'string', ''  }, ...
            ...
            { 'Style', 'text', 'string', 'Pair orientation (all, ap, lr, aplr, or diag)', 'horizontalalignment' , 'right' }, ...
            { 'Style', 'edit', 'string', 'aplr' } ...
            { 'Style', 'text', 'string', ''  }, ...
            ...
            { 'Style', 'text', 'string', 'Hemispheric relation (all, inter, intra, neither)', 'horizontalalignment' , 'right' }, ...
            { 'Style', 'edit', 'string', 'all' } ...
            { 'Style', 'text', 'string', ''  }, ...
            ...
            { 'Style', 'text', 'string', 'Max pair membership per channel', 'horizontalalignment' , 'right' }, ...
            { 'Style', 'edit', 'string', '9' } ...
            { 'Style', 'text', 'string', ''  }, ...
            ...
            };

results=inputgui(geometry,uilist,'help coh_pairgui_determine;','Set parameters for pair determination');

exclude=~logical(results{1});
distance=eval(results{2});
orientation=results{3};
hemisphere=results{4};
degree=eval(results{5});

outpairs=inpairs; outinds=ininds;

if exclude
    [outpairs, outinds] = pair_filter(outpairs,outinds,chan_locs, ...
        'x_edge');
end

if ~isempty(distance)
    [outpairs, outinds] = pair_filter(outpairs,outinds,chan_locs, ...
        'distance',distance);
end

if ~isempty(orientation)
    [outpairs, outinds] = pair_filter(outpairs,outinds,chan_locs, ...
        'angle',orientation);
end

if ~isempty(hemisphere)
    [outpairs, outinds] = pair_filter(outpairs,outinds,chan_locs, ...
        'hemispheric',hemisphere);
end

if ~isempty(degree)
    [outpairs, outinds] = pair_filter(outpairs,outinds,chan_locs, ...
        'max_degree',degree);
end

end